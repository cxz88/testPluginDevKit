/*
 *      Copyright (c) 2018-2028, Chill Zhuang All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are met:
 *
 *  Redistributions of source code must retain the above copyright notice,
 *  this list of conditions and the following disclaimer.
 *  Redistributions in binary form must reproduce the above copyright
 *  notice, this list of conditions and the following disclaimer in the
 *  documentation and/or other materials provided with the distribution.
 *  Neither the name of the dreamlu.net developer nor the names of its
 *  contributors may be used to endorse or promote products derived from
 *  this software without specific prior written permission.
 *  Author: Chill 庄骞 (smallchill@163.com)
 */
package $!{package.Entity};

#foreach($pkg in $!{table.importPackages})
import $!{pkg};
#end
#if($!{entityLombokModel})
import lombok.Data;
import lombok.EqualsAndHashCode;
import com.baomidou.mybatisplus.annotation.TableField;
#end
#if($!{swagger})
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
#end

/**
 * $!{table.comment}实体类
 *
 * @author $!{author}
 * @since $!{date}
 */
#if($!{entityLombokModel})
@Data
#end
#if($!{table.convert})
@TableName("$!{table.name}")
#end
#if($!{superEntityClass})
@EqualsAndHashCode(callSuper = true)
#end
#if($!{swagger})
@ApiModel(value = "$!{entity}对象", description = #if ("$!{table.comment}"=="")"$!{entity}对象"#else"$!{table.comment}"#end)
#end
#if($!{superEntityClass})
public class $!{entity} extends $!{superEntityClass}#if($!{activeRecord})<$!{entity}>#end {
#elseif($!{activeRecord})
    @Accessors(chain = true)
    public class $!{entity} extends Model<$!{entity}> {
#else
    public class $!{entity} implements Serializable {
#end

    private static final long serialVersionUID = 1L;

## ----------  BEGIN 字段循环遍历  ----------
#foreach($field in $!{table.fields})
    @ApiModelProperty(value = "$!{field.comment}")
    @TableField("$!{field.name}")
    private $!{field.propertyType} $!{field.propertyName};
#end
## ----------  END 字段循环遍历  ----------

#if(!$!{entityLombokModel})
    #foreach($field in $!{table.fields})
        #if($!{field.propertyType.equals("boolean")})
            #set($getprefix="is")
        #else
            #set($getprefix="get")
        #end

        public $!{field.propertyType} $!{getprefix}$!{field.capitalName}() {
        return $!{field.propertyName};
    }

        #if($!{entityBuilderModel})
            public $!{entity} set$!{field.capitalName}($!{field.propertyType} $!{field.propertyName}) {
        #else
            public void set$!{field.capitalName}($!{field.propertyType} $!{field.propertyName}) {
        #end
        this.$!{field.propertyName} = $!{field.propertyName};
        #if($!{entityBuilderModel})
            return this;
        #end
    }
    #end
#end

}
